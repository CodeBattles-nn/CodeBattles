INSERT INTO problems ("id", "name", "description", "in", "out", "tests", "examples") VALUES ('1', 'Футбол', 'Петя и Вася играют в футбол. Петя забил А голов, а Вася - В голов.Ваша задача посчитать, скольковсего голов было забито в данной игре :)', 'На ввод подаются два числа на разных строках. A - число голов,
забитых Петей. B - Васей.
0 ≤ А ≤ 10^9
0 ≤ B ≤ 10^9', 'Выведите общее количество голов в игре', '[
["12\n13", "25"], ["3\n2", "5"],
 ["3\n15","18"]
 ]', '[
["12\\n13", "25"], ["3\\n2", "5"],
 ["3\n15","18"]
 ]');
INSERT INTO problems ("id", "name", "description", "in", "out", "tests", "examples") VALUES ('2', 'Четность числа', 'Маша и Даша спорят, кто больше разбирается в математике. При этом, Даша не знает почти ничего. Помогите ей выиграть спор. Ваша задача написать программу, определяющую четность числа', '-10^6 <= N <= 10^6', 'Вывести "ДА", если число четное. "НЕТ" - если нечетное. (Вывод выполняется без ковычек)', '[["2", "YES"], ["0", "YES"], ["1","NO"]]', '[["2", "YES"], ["0", "YES"], ["1","NO"]]');
INSERT INTO problems ("id", "name", "description", "in", "out", "tests", "examples") VALUES ('3', 'Слоник Бегает по полю', 'Слоник за один шаг может прыгнуть на N или меньше клеток. Всего Слонику надо перепрыгнуть K клеток. Сколько минимально прыжков должен сделать слон, чтобы достичь цели? ', 'число N - максимальная длинна прыжка

число K - сколько нужно пропрыгать клеток', 'Одно челое число прыжков', '[["2\n5", "3"], ["8\n0", "0"] , ["3\n9", "3"]]', '[["2\\n5", "3"], ["8\\n0", "0"]]');
INSERT INTO problems ("id", "name", "description", "in", "out", "tests", "examples") VALUES ('4', 'Биология отстой', 'йцв', 'йы', '1йы', '[["12\n13", "25"], ["3\n2", "5"]]', '[["12\\n13", "25"], ["3\\n2", "5"]]');
INSERT INTO problems ("id", "name", "description", "in", "out", "tests", "examples") VALUES ('5', 'Bit++', 'Классический язык программирования в Битландии — Bit++. Этот язык очень необычный и сложный!

Особенность языка Bit++ состоит в том, что в нем ровно одна переменная, которая называется x. Также в этом языке есть две операции:

Операция ++ увеличивает значение, хранящееся в переменной x на 1.
Операция -- уменьшает значение, хранящееся в переменной x на 1.
Предложение в языке Bit++ — это последовательность, состоящая из ровно одной операции и ровно одной переменной x. Предложение записывается без пробелов, то есть может содержать только символы: «+», «-», «X». Выполнить предложение, значит выполнить операцию, которая содержится в предложении.

Программа на языке Bit++ — это последовательность предложений, каждое из которых требуется выполнить. Выполнить программу, значит выполнить все ее предложения.

Вам задана программа на языке Bit++. Перед выполнением программы в переменной x хранится значение 0. Выполните программу и выведите значение, которое будет храниться в переменной x после выполнения программы.', 'В первой строке записано единственное целое число n (1 ≤ n ≤ 150) — количество предложений в программе. В каждой из следующих n строк записано по предложению. Каждое предложение состоит из ровно одной операции (++ или --) и ровно одной переменной x (обозначается буквой «X»). Таким образом, не бывает пустых предложений. Операция и переменная могут быть записаны в любом порядке.', 'Выведите единственное целое число — значение, которое будет храниться в переменной x после выполнения программы.', '[["1\n++X", "1"], ["2\nX++\n--X", "0"]]', '[["1\n++X", "1"], ["2\nX++\n--X", "0"]]');
INSERT INTO problems ("id", "name", "description", "in", "out", "tests", "examples") VALUES ('6', 'I_love_%username%', 'Вася обожает спортивное программирование. Программировать он не умеет, но очень любит наблюдать за ходом разных соревнований. У Васи даже есть любимый участник, за которым он следит особенно пристально.

Однажды Вася решил собрать результаты всех выступлений своего любимого участника и посмотреть на рост его крутости. Для каждого соревнования с его участием он выписал одно неотрицательное число — количество баллов, набранных участником в соревновании. Баллы за соревнования Вася выписывал в том порядке, в котором соревнования проходили (разумеется, никакие два соревнования не проходили одновременно).

Вася считает выступление участника удивительным в двух случаях: если участник установит новый рекорд или анти-рекорд по количеству набранных баллов. Иными словами, удивительно, если участник набирает на соревновании строго больше баллов, чем на каждом из предыдущих соревнований. Также удивительно, если участник набирает на соревновании строго меньше баллов, чем на каждом из предыдущих соревнований. Первое выступление удивительным не считается.

Теперь Вася хочет посчитать, сколько всего было удивительных выступлений за всю карьеру участника. Но список набранных баллов получился длинный, а программировать Вася не умеет... Поэтому он просит Вас помочь ему.', 'В первой строке записано единственное целое число n (1 ≤ n ≤ 1000) — количество выступлений участника.

В следующей строке записано n целых неотрицательных чисел, разделенных пробелами — баллы, набранные участником, в хронологическом порядке. Все баллы не превосходят 10000.', 'Выведите единственное число — количество удивительных выступлений за всю карьеру участника.', '[["5\n100 50 200 150 200", "2"], ["10\n4664 6496 5814 7010 5762 5736 6944 4850 3698 7242", "4"]]', '[["5\n100 50 200 150 200", "2"], ["10\n4664 6496 5814 7010 5762 5736 6944 4850 3698 7242", "4"]]');
